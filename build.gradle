plugins {
    id 'java'
    id "io.papermc.paperweight.userdev" version "1.5.5"
}

group = 'kro.dodoworld'
version = 'beta-0.5.2-dev'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    implementation 'org.jetbrains:annotations:25.0.0'
    paperweight.paperDevBundle("1.19.2-R0.1-SNAPSHOT")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'kro.dodoworld.advancedmonsters.util.Main'
        )
    }
}


tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}


tasks.register('copyJarToPluginDir') {
    copy {
        from 'build/libs/' + rootProject.name + '-' + version + '.jar'
        into 'C:\\Users\\HP\\Desktop\\test\\plugins'
    }
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
